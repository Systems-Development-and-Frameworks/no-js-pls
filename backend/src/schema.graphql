type Post {
    id: ID!
    title: String!
    votes: Int!
    author: User!
}

type User {
    name: ID!
    posts: [Post]
}

type Query {
    """Fetches all available posts"""
    posts: [Post]
    """Fetches all available users"""
    users: [User]
}

type Mutation {
    """Post a new Newspost"""
    write(post: PostInput!): Post
    # OPTIONAL
    # delete(id: ID!): Post

    # ⚠️ FIXME in exercise #4
    # mock voter until we have authentication
    upvote(id: ID!, voter: UserInput!): Post

    # OPTIONAL
    # downvote(id: ID!, voter: UserInput!): Post
}

input PostInput {
    title: String!

    # ⚠️ FIXME in exercise #4
    # mock author until we have authentication
    author: UserInput!
}

input UserInput {
    name: String!
}
